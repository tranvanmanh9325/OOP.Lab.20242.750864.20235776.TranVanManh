Question 1: Write a toString() method for the DigitalVideoDisc class. What should be the
return type of this method?
Phương thức toString() cho lớp DigitalVideoDisc nên có kiểu trả về là String. Phương thức này được sử dụng để trả về một đại diện chuỗi của đối tượng, thường hiển thị các thuộc tính chính của nó theo định dạng dễ đọc. Việc override phương thức này giúp người dùng dễ dàng theo dõi thông tin đối tượng khi in ra màn hình, ví dụ như tiêu đề, thể loại, đạo diễn, độ dài và giá của đĩa DVD.

Question 2: Alternatively, to compare items in the cart, instead of using the Comparator class I have mentioned, you can use the Comparable interface1 and override the compareTo()method. You can refer to the Java docs to see the information of this interface.
Suppose we are taking this Comparable interface approach
 - What class should implement the Comparable interface?
Lớp Media nên triển khai giao diện Comparable vì đây là lớp cha của tất cả các loại media (Book, CompactDisc, DVD) và có các thuộc tính chung như title, cost để so sánh.

- In those classes, how should you implement the compareTo()method to reflect the ordering that we want?
Trong lớp Media, phương thức compareTo() sẽ so sánh theo thứ tự:

So sánh theo title (alphabetical).
Nếu tiêu đề giống nhau, so sánh theo cost (giảm dần).
Nếu hai tiêu đề khác nhau, trả về kết quả của so sánh đó.
Đoạn mã:
java
@Override
public int compareTo(Media other) {
    int titleComparison = this.title.compareToIgnoreCase(other.title);
    if (titleComparison != 0) {
        return titleComparison;
    }
    return Double.compare(other.cost, this.cost);
}

- Can we have two ordering rules of the item (by title then cost and by cost then title) if we use this Comparable interface approach?
Không, giao diện Comparable chỉ cho phép một quy tắc sắp xếp duy nhất. Để có nhiều quy tắc, cần sử dụng Comparator.

- Suppose the DVDs have a different ordering rule from the other media types, that is by title, then decreasing length, then cost. How would you modify your code to allow this?
tôi sẽ tạo Comparator riêng cho DVD

public class DvdComparator implements Comparator<DigitalVideoDisc> {
    public int compare(DigitalVideoDisc d1, DigitalVideoDisc d2) {
        // So sánh theo title (tăng dần, không phân biệt hoa thường)
        int t = d1.getTitle().compareToIgnoreCase(d2.getTitle());
        if (t != 0) return t;

        // Nếu tiêu đề giống nhau -> so sánh theo độ dài (giảm dần)
        int l = Integer.compare(d2.getLength(), d1.getLength());
        if (l != 0) return l;

        // Nếu cả tiêu đề và độ dài giống -> so sánh theo cost (tăng dần)
        return Float.compare(d1.getCost(), d2.getCost());
    }
}

